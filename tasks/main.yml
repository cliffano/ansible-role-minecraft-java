---
- name: Ensure install directory existence
  ansible.builtin.file:
    path: "{{ mcj_install_dir }}"
    state: directory
    mode: 0755

- name: Ensure sub directories existence
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ mcj_install_dir }}/bin"
    - "{{ mcj_install_dir }}/workspace"

- name: "Get the status of Minecraft Server {{ mcj_minecraft_version }} jar file"
  ansible.builtin.stat:
    path: "{{ mcj_install_dir }}/bin/minecraft_server.{{ mcj_minecraft_version }}.jar"
  register: minecraft_server_version_jar_file

- name: Download Minecraft Server jar file
  ansible.builtin.get_url:
    url: "{{ minecraft_versions[mcj_minecraft_version]['url'] }}"
    dest: "{{ mcj_install_dir }}/bin/server.jar"
    mode: 0644
  when: not minecraft_server_version_jar_file.stat.exists

- name: Get the status of downloaded Minecraft Server jar file
  ansible.builtin.stat:
    path: "{{ mcj_install_dir }}/bin/server.jar"
    checksum_algorithm: sha1
  register: minecraft_server_jar_file
  when: not minecraft_server_version_jar_file.stat.exists

- name: Fail if downloaded Minecraft Server jar file checksum does not match
  ansible.builtin.fail:
    msg: "Downloaded Minecraft Server jar file checksum {{ minecraft_server_jar_file.stat.checksum }} does not match the expected checksum {{ minecraft_versions[mcj_minecraft_version]['sha1'] }}"
  when: not minecraft_server_version_jar_file.stat.exists and minecraft_server_jar_file.stat.checksum != minecraft_versions[mcj_minecraft_version]['sha1']

- name: "Copy downloaded Minecraft Server jar file as Minecraft Server {{ mcj_minecraft_version }} jar file"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ mcj_install_dir }}/bin/server.jar"
    dest: "{{ mcj_install_dir }}/bin/minecraft_server.{{ mcj_minecraft_version }}.jar"
    mode: 0644
  when: not minecraft_server_version_jar_file.stat.exists and minecraft_server_jar_file.stat.exists

- name: Delete downloaded Minecraft Server jar file
  ansible.builtin.file:
    path: "{{ mcj_install_dir }}/bin/server.jar"
    state: absent

- name: Create symbolic link for Minecraft Server jar file
  ansible.builtin.file:
    src: "{{ mcj_install_dir }}/bin/minecraft_server.{{ mcj_minecraft_version }}.jar"
    dest: "{{ mcj_install_dir }}/bin/minecraft_server.jar"
    state: link

- name: Get the status of Minecraft Server start script file
  ansible.builtin.stat:
    path: "{{ mcj_install_dir }}/bin/start.sh"
  register: minecraft_start_script_file

- name: Create Minecraft Server start script
  ansible.builtin.copy:
    content: |
      java {{ mcj_java_opts }} -jar {{ mcj_install_dir }}/bin/minecraft_server.jar nogui
    dest: "{{ mcj_install_dir }}/bin/start.sh"
    mode: 0755
  when: not minecraft_start_script_file.stat.exists